# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson
'.source.js':
  'describe':
    'prefix': 'des'
    'body': """
    describe('$1', function() {
      $2
    });
    """

  'controller':
    'prefix': 'con'
    'body': """
(function() {
  'use strict';

  angular
  .module('application')
  .controller('${1:Controller}', ${1:Controller});

  /* @ngInject */
  function ${1:Controller}($2) {
    var vm = this;

    activate();

    function activate() {
    }

    $0
  }

})();
    """

  'factory':
    'prefix': 'fac'
    'body': """
(function() {
  'use strict';

  angular
  .module('application')
  .factory('${1:Factory}', ${1:Factory});

  /* @ngInject */
  function ${1:Factory}($2) {
    var vm = {
      $0
      _state: createState()
    };
    return vm;

    function createState() {
      return {
      };
    }
  }

})();
    """

  'beforeEach':
    'prefix': 'bef'
    'body': """
    beforeEach(function() {
      $1
    });
    """

  'it':
    'prefix': 'it'
    'body': """
    it('$1', function() {
      $2
    });
    """

  'test':
    'prefix': 'test'
    'body': """
/* globals $1 */
(function() {
  'use strict';

  describe('$2', function() {
    var sandbox = sinon.sandbox.create();

    beforeEach(function() {
      bard.appModule('ApplicantPortal');
      bard.inject(this, '$3');
    });

    afterEach(function() {
      sandbox.reset();
    });

    $4
  });

})();
"""
